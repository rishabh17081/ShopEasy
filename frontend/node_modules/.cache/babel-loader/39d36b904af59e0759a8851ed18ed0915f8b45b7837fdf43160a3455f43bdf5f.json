{"ast":null,"code":"import axios from 'axios';\n\n// This is a utility service for handling PayPal related operations\n// You might want to connect this to your backend API in a real application\n\nexport const savePaypalTransaction = async transactionData => {\n  try {\n    // In a real app, you would send this data to your backend\n    // return await axios.post('/api/payments/paypal', transactionData);\n\n    // For now, we'll just simulate a successful API call\n    console.log('Saving PayPal transaction:', transactionData);\n    return {\n      success: true,\n      message: 'Transaction saved successfully',\n      data: transactionData\n    };\n  } catch (error) {\n    console.error('Error saving PayPal transaction:', error);\n    throw error;\n  }\n};\nexport const verifyPaypalPayment = async paymentId => {\n  try {\n    // In a real app, you would verify this payment with your backend\n    // return await axios.get(`/api/payments/paypal/verify/${paymentId}`);\n\n    // For now, we'll just simulate a successful verification\n    console.log('Verifying PayPal payment:', paymentId);\n    return {\n      success: true,\n      message: 'Payment verified successfully',\n      data: {\n        paymentId,\n        status: 'COMPLETED',\n        verifiedAt: new Date().toISOString()\n      }\n    };\n  } catch (error) {\n    console.error('Error verifying PayPal payment:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","savePaypalTransaction","transactionData","console","log","success","message","data","error","verifyPaypalPayment","paymentId","status","verifiedAt","Date","toISOString"],"sources":["/Users/rishabhsharma/PycharmProjects/ecommerce-site/frontend/src/services/payment/paypalService.js"],"sourcesContent":["import axios from 'axios';\n\n// This is a utility service for handling PayPal related operations\n// You might want to connect this to your backend API in a real application\n\nexport const savePaypalTransaction = async (transactionData) => {\n  try {\n    // In a real app, you would send this data to your backend\n    // return await axios.post('/api/payments/paypal', transactionData);\n    \n    // For now, we'll just simulate a successful API call\n    console.log('Saving PayPal transaction:', transactionData);\n    return {\n      success: true,\n      message: 'Transaction saved successfully',\n      data: transactionData\n    };\n  } catch (error) {\n    console.error('Error saving PayPal transaction:', error);\n    throw error;\n  }\n};\n\nexport const verifyPaypalPayment = async (paymentId) => {\n  try {\n    // In a real app, you would verify this payment with your backend\n    // return await axios.get(`/api/payments/paypal/verify/${paymentId}`);\n    \n    // For now, we'll just simulate a successful verification\n    console.log('Verifying PayPal payment:', paymentId);\n    return {\n      success: true,\n      message: 'Payment verified successfully',\n      data: {\n        paymentId,\n        status: 'COMPLETED',\n        verifiedAt: new Date().toISOString()\n      }\n    };\n  } catch (error) {\n    console.error('Error verifying PayPal payment:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,eAAe,IAAK;EAC9D,IAAI;IACF;IACA;;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,eAAe,CAAC;IAC1D,OAAO;MACLG,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,gCAAgC;MACzCC,IAAI,EAAEL;IACR,CAAC;EACH,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,SAAS,IAAK;EACtD,IAAI;IACF;IACA;;IAEA;IACAP,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEM,SAAS,CAAC;IACnD,OAAO;MACLL,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,+BAA+B;MACxCC,IAAI,EAAE;QACJG,SAAS;QACTC,MAAM,EAAE,WAAW;QACnBC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACrC;IACF,CAAC;EACH,CAAC,CAAC,OAAON,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}